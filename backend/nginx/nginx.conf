worker_processes 1;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/json;
    sendfile        on;
    keepalive_timeout  65;

    set_real_ip_from 0.0.0.0/0;
    real_ip_recursive on;
    real_ip_header X-Forwarded-For;
    limit_req_zone $binary_remote_addr zone=one:10m rate=20r/m;

    map $http_origin $allowed_origin {
        "~*^https://localhost:3000$" $http_origin;
        "~*^https?://172\\.27\\.96\\.1(:[0-9]+)?$" $http_origin;
        "~*^https?://192\\.168\\.1\\.3(:[0-9]+)?$" $http_origin;
        default "";
    }

    upstream projectserver {
        server design_rendering:3003;
    }

    upstream userserver {
        server user:3004;
    }

    upstream authenticationserver {
        server authentication:3002;
    }

    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate /certificates/localhost.pem;
        ssl_certificate_key /certificates/localhost-key.pem;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        add_header 'Access-Control-Allow-Origin' $allowed_origin;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $allowed_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }

            # Proxy settings (as needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_request_headers on;


            fastcgi_hide_header X-Powered-By;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Set-Cookie "Path=/; HttpOnly; Secure";
            add_header Cache-Control 'no-store, no-cache';
            add_header Set-Cookie "Path=/; HttpOnly; Secure";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            expires epoch;
        }

        limit_req zone=one burst=20 nodelay;

        # --projects
        location /api/projects/create {
            proxy_pass http://userserver/v1/api/projects/create;
        }

        location ~ /api/project_datail/(.*) {
            set $project_id $1;
            proxy_pass http://userserver/v1/api/projects/$project_id;
        }

        location ~ /api/project/(.*) {
            set $project_id $1;
            proxy_pass http://projectserver/v1/api/project/$project_id;
        }

        location ~ /api/projects/(.*)/all {
            set $user_id $1;
            proxy_pass http://userserver/v1/api/projects/getAllProjects/$user_id;
        }

        location ~ /api/projects/(.*)/save {
            set $project_id $1;
            proxy_pass http://projectserver/v1/api/project/$project_id/save;
        }

        location ~ /api/projects/(.*)/update {
            set $project_id $1;
            proxy_pass http://userserver/v1/api/projects/$project_id/update;
        }

        # --auth
        location /api/auth/register {
            proxy_pass http://authenticationserver/v1/api/auth/register;
        }

        location /api/auth/login {
            proxy_pass http://authenticationserver/v1/api/auth/login;
        }

        location /api/auth/login-confirm {
            proxy_pass http://authenticationserver/v1/api/auth/login-confirm;
        }

        location /api/auth/logout {
            proxy_pass http://authenticationserver/v1/api/auth/logout;
        }

        location /api/auth/password-reset {
            proxy_pass http://authenticationserver/v1/api/auth/password-reset;
        }

        location ~ /api/auth/password-reset/(.*) {
            set $resetPasswordCode $1;
            proxy_pass http://authenticationserver/v1/api/auth/password-reset/$resetPasswordCode;
        }

        # --users
        location ~ /api/users/(.*) {
            set $user_id $1;
            proxy_pass http://userserver/v1/api/users/$user_id;
        }

        location /api/users/update {
            proxy_pass http://userserver/v1/api/users/update;
        }

        location /api/users/avatarUpload {
            client_max_body_size 3M;
            proxy_pass http://userserver/v1/api/users/avatar;
        }
    }
}
