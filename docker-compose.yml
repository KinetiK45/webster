version: '3.8'

services:
#  3001
  api_gateway:
    image: gateway:latest
    #    build: ./backend/api_gateway/
    ports:
      - "3001:443"
    depends_on:
      - user
      - authentication
      - design_rendering
    volumes:
       - ${CERTIFICATES_PATH}:/certificates
    restart: unless-stopped

#3002
  authentication:
    image: authentication:latest
    #    build: ./backend/authentication/
    depends_on:
      - redis
      - rabbitmq
      - initdb
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      REDIS_URL: ${REDIS_URL}
      RABBITMQ_URL: ${RABBITMQ_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
    restart: unless-stopped

  #3003
  design_rendering:
    image: design-rendering:latest
#    build: ./backend/design_rendering/
    depends_on:
      - mongo
      - rabbitmq
    environment:
      MONGO_DB_URL: ${MONGO_DB_URL}
      RABBITMQ_URL: ${RABBITMQ_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
    restart: unless-stopped

  #3004
  user:
    image: user:latest
#    build: ./backend/user/
    environment:
      RABBITMQ_URL: ${RABBITMQ_URL}
      POSTGRES_URL: ${POSTGRES_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    restart: unless-stopped

  notification:
    image: notification:latest
#    build: ./backend/notification/
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: ${RABBITMQ_URL}
      STMP_URL: ${STMP_URL}
    restart: unless-stopped

  initdb:
    image: init-db:latest
    #    build: ./backend/initdb/
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      BACKUP_POSTGRES: ${BACKUP_POSTGRES}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
    depends_on:
      - postgres
    restart: on-failure

  redis:
    image: redis:latest
    volumes:
      - webster_redis_data:/data
    restart: always

  rabbitmq:
    image: rabbitmq:latest
    volumes:
      - webster_rabbit_data:/var/lib/rabbitmq
    restart: always

  mongo:
    image: mongo:latest
    volumes:
      - webster_mongo_db:/data/db
      - webster_mongo_configdb:/data/configdb
    restart: always

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - webster_postgres:/var/lib/postgresql/data
    restart: always
#    ports:
#      - "5432:5432"

volumes:
  webster_postgres:
    name: webster_postgres

  webster_mongo_db:
    name: webster_mongo_db

  webster_mongo_configdb:
    name: webster_mongo_config_db

  webster_redis_data:
    name: webster_redis_data

  webster_rabbit_data:
    name: webster_rabbit_data
